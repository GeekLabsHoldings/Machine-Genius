"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
require("./IconButton.scss");
var _Badge = _interopRequireDefault(require("./Badge"));
var _Spinner = _interopRequireDefault(require("./Spinner"));
var _excluded = ["disabled", "size", "variant", "onClick", "children", "showBadge", "badgeLabel", "isLoading"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// Forward refs and props
var IconButton = /*#__PURE__*/_react["default"].forwardRef(function (_ref, ref) {
  var disabled = _ref.disabled,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? "medium" : _ref$size,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? "solid" : _ref$variant,
    onClick = _ref.onClick,
    children = _ref.children,
    showBadge = _ref.showBadge,
    badgeLabel = _ref.badgeLabel,
    isLoading = _ref.isLoading,
    props = _objectWithoutProperties(_ref, _excluded);
  var sizeClass = "icon-button-".concat(size);
  var styleClass = "icon-button-".concat(variant);
  return /*#__PURE__*/_react["default"].createElement("button", _extends({
    ref: ref
  }, props, {
    className: "icon-button ".concat(sizeClass, " ").concat(styleClass),
    onClick: onClick,
    disabled: disabled || isLoading
  }), isLoading ? /*#__PURE__*/_react["default"].createElement(_Spinner["default"], null) : children, showBadge && /*#__PURE__*/_react["default"].createElement(_Badge["default"], {
    label: badgeLabel
  }));
});
var _default = exports["default"] = IconButton;