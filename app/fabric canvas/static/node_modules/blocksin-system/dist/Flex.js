"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
require("./Flex.scss");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var Flex = /*#__PURE__*/_react["default"].forwardRef(function (_ref, ref) {
  var children = _ref.children,
    _ref$direction = _ref.direction,
    direction = _ref$direction === void 0 ? "" : _ref$direction,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? "" : _ref$gap,
    _ref$wrap = _ref.wrap,
    wrap = _ref$wrap === void 0 ? "" : _ref$wrap,
    style = _ref.style,
    _ref$align = _ref.align,
    align = _ref$align === void 0 ? "" : _ref$align,
    _ref$justify = _ref.justify,
    justify = _ref$justify === void 0 ? "" : _ref$justify,
    id = _ref.id,
    _ref$customClass = _ref.customClass,
    customClass = _ref$customClass === void 0 ? "" : _ref$customClass,
    onClick = _ref.onClick,
    fluid = _ref.fluid;
  // Only add class if the prop is provided
  var flexClass = direction ? "flex-".concat(direction) : "";
  var gapClass = gap ? "gap-".concat(gap) : "";
  var alignClass = align ? "align-".concat(align) : "";
  var justifyClass = justify ? "justify-".concat(justify) : "";
  var wrapClass = wrap ? "wrap-".concat(wrap) : "";
  var fluidClass = fluid ? "fluid" : "";
  var combinedStyles = _objectSpread({}, style);

  // Construct className string, filtering out empty segments
  var className = ["flex", flexClass, customClass, alignClass, justifyClass, gapClass, wrapClass, fluidClass].filter(Boolean).join(" ");
  var idAttribute = id ? {
    id: id
  } : {};
  return /*#__PURE__*/_react["default"].createElement("div", _extends({}, idAttribute, {
    className: className,
    style: combinedStyles,
    ref: ref,
    onClick: onClick
  }), children);
});
var _default = exports["default"] = Flex;