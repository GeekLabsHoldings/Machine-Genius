"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
require("./Input.scss");
var _sebikostudioIcons = require("sebikostudio-icons");
var _excluded = ["pattern", "label", "placeholder", "errormsg", "type", "value", "onChange", "className", "disabled", "onClick", "onFocus", "onBlur", "icon", "validation", "name", "fluid"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Input = function Input(_ref) {
  var pattern = _ref.pattern,
    _ref$label = _ref.label,
    label = _ref$label === void 0 ? "First name" : _ref$label,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? "Enter first name" : _ref$placeholder,
    _ref$errormsg = _ref.errormsg,
    errormsg = _ref$errormsg === void 0 ? "Invalid format." : _ref$errormsg,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? "text" : _ref$type,
    value = _ref.value,
    onChange = _ref.onChange,
    className = _ref.className,
    disabled = _ref.disabled,
    onClick = _ref.onClick,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    Icon = _ref.icon,
    _ref$validation = _ref.validation,
    validation = _ref$validation === void 0 ? false : _ref$validation,
    name = _ref.name,
    fluid = _ref.fluid,
    props = _objectWithoutProperties(_ref, _excluded);
  var isSearchInput = type === "search";
  var inputClasses = (0, _classnames["default"])("inputfield", className, {
    inputSearch: isSearchInput,
    fluid: fluid,
    hasIcon: !!Icon
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: inputClasses,
    disabled: disabled
  }, isSearchInput && /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.MagnifyingGlassIcon, null), Icon && /*#__PURE__*/_react["default"].createElement(Icon, {
    className: "IconLeft"
  }), /*#__PURE__*/_react["default"].createElement("input", _extends({
    pattern: pattern,
    type: type,
    placeholder: placeholder,
    value: value,
    onChange: onChange,
    onClick: onClick,
    name: name,
    onFocus: onFocus,
    onBlur: onBlur,
    "aria-invalid": validation && !pattern ? "true" : "false",
    disabled: disabled
  }, props)), validation && /*#__PURE__*/_react["default"].createElement("p", {
    className: "error"
  }, errormsg), label && /*#__PURE__*/_react["default"].createElement("label", {
    htmlFor: name
  }, label));
};
Input.propTypes = {
  pattern: _propTypes["default"].string,
  label: _propTypes["default"].string,
  placeholder: _propTypes["default"].string,
  errormsg: _propTypes["default"].string,
  type: _propTypes["default"].string,
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  onChange: _propTypes["default"].func.isRequired,
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  onClick: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  onBlur: _propTypes["default"].func,
  icon: _propTypes["default"].elementType,
  validation: _propTypes["default"].bool,
  name: _propTypes["default"].string,
  fluid: _propTypes["default"].bool
};
var _default = exports["default"] = Input;