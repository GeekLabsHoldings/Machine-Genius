"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var ToolbarPrimitive = _interopRequireWildcard(require("@radix-ui/react-toolbar"));
require("./radix-styles/Toolbar.scss");
var _excluded = ["children", "orientation", "fluid"],
  _excluded2 = ["children", "href", "icon"],
  _excluded3 = ["children"],
  _excluded4 = ["children", "icon", "value"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Toolbar = /*#__PURE__*/_react["default"].forwardRef(function (_ref, ref) {
  var children = _ref.children,
    orientation = _ref.orientation,
    fluid = _ref.fluid,
    props = _objectWithoutProperties(_ref, _excluded);
  // Compute the class names, adding 'fluid' if the fluid prop is true
  var classNames = "ToolbarRoot".concat(fluid ? " fluid" : "");
  return /*#__PURE__*/_react["default"].createElement(ToolbarPrimitive.Root, _extends({
    ref: ref,
    orientation: orientation,
    className: classNames
  }, props), children);
});
Toolbar.Link = /*#__PURE__*/_react["default"].forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    href = _ref2.href,
    Icon = _ref2.icon,
    props = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/_react["default"].createElement(ToolbarPrimitive.Link, _extends({
    ref: ref,
    href: href,
    className: "ToolbarLink"
  }, props), Icon && /*#__PURE__*/_react["default"].createElement(Icon, null), children);
});
Toolbar.ToggleGroup = /*#__PURE__*/_react["default"].forwardRef(function (_ref3, ref) {
  var children = _ref3.children,
    props = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/_react["default"].createElement(ToolbarPrimitive.ToggleGroup, _extends({
    ref: ref,
    className: "ToolbarToggleGroup"
  }, props), children);
});
Toolbar.ToggleItem = /*#__PURE__*/_react["default"].forwardRef(function (_ref4, ref) {
  var children = _ref4.children,
    Icon = _ref4.icon,
    value = _ref4.value,
    props = _objectWithoutProperties(_ref4, _excluded4);
  return /*#__PURE__*/_react["default"].createElement(ToolbarPrimitive.ToggleItem, _extends({
    ref: ref,
    value: value,
    className: "ToolbarToggleItem"
  }, props), Icon && /*#__PURE__*/_react["default"].createElement(Icon, null), children);
});
Toolbar.Separator = function () {
  return /*#__PURE__*/_react["default"].createElement(ToolbarPrimitive.Separator, {
    className: "ToolbarSeparator"
  });
};
var _default = exports["default"] = Toolbar;