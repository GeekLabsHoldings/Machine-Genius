"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
require("./Stepper.scss");
var _sebikostudioIcons = require("sebikostudio-icons");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var Stepper = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, _ref2) {
  var steps = _ref.steps,
    currentStep = _ref.currentStep,
    _ref$orientation = _ref.orientation,
    orientation = _ref$orientation === void 0 ? "horizontal" : _ref$orientation,
    _ref$icons = _ref.icons,
    icons = _ref$icons === void 0 ? [] : _ref$icons,
    _ref$dynamic = _ref.dynamic,
    dynamic = _ref$dynamic === void 0 ? false : _ref$dynamic,
    _ref$onStepClick = _ref.onStepClick,
    onStepClick = _ref$onStepClick === void 0 ? function () {} : _ref$onStepClick;
  var stepperRef = (0, _react.useRef)(null);
  var handleStepClick = (0, _react.useCallback)(function (step) {
    if (dynamic && step < currentStep) {
      onStepClick(step);
    }
  }, [currentStep, dynamic, onStepClick]);
  (0, _react.useEffect)(function () {
    if (dynamic && stepperRef.current) {
      var handleKeyDown = function handleKeyDown(event) {
        if (event.key === "ArrowRight" || event.key === "ArrowDown" || event.key === "ArrowLeft" || event.key === "ArrowUp") {
          event.preventDefault();
          var focusableSteps = stepperRef.current.querySelectorAll(".step[tabindex='0']");
          var currentIndex = Array.from(focusableSteps).findIndex(function (step) {
            return step === document.activeElement;
          });
          if (event.key === "ArrowRight" || event.key === "ArrowDown") {
            var nextIndex = currentIndex + 1 < focusableSteps.length ? currentIndex + 1 : 0;
            focusableSteps[nextIndex].focus();
          } else if (event.key === "ArrowLeft" || event.key === "ArrowUp") {
            var prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : focusableSteps.length - 1;
            focusableSteps[prevIndex].focus();
          }
        } else if (event.key === "Enter") {
          var _focusableSteps = stepperRef.current.querySelectorAll(".step[tabindex='0']");
          var _currentIndex = Array.from(_focusableSteps).findIndex(function (step) {
            return step === document.activeElement;
          });
          if (_currentIndex !== -1) {
            handleStepClick(_currentIndex + 1);
          }
        }
      };
      var currentStepperRef = stepperRef.current;
      currentStepperRef.addEventListener("keydown", handleKeyDown);
      return function () {
        if (currentStepperRef) {
          currentStepperRef.removeEventListener("keydown", handleKeyDown);
        }
      };
    }
  }, [dynamic, handleStepClick]);
  var stepElements = [];
  var _loop = function _loop(i) {
    var isCurrent = i === currentStep;
    var isCompleted = i < currentStep;
    var IconComponent = icons[i - 1] && !isCompleted ? icons[i - 1] : null;
    stepElements.push( /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, {
      key: i
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "StepWrapper ".concat(dynamic ? "dynamic" : "")
    }, /*#__PURE__*/_react["default"].createElement("span", {
      className: "step ".concat(isCurrent ? "current" : "", " ").concat(isCompleted ? "completed" : ""),
      onClick: function onClick() {
        return handleStepClick(i);
      },
      role: dynamic ? "button" : "presentation",
      tabIndex: dynamic ? 0 : -1,
      "aria-current": isCurrent ? "step" : undefined
    }, isCompleted && /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.CheckIcon, {
      size: 16,
      weight: "bold"
    }), !isCompleted && (IconComponent ? /*#__PURE__*/_react["default"].createElement(IconComponent, {
      size: 16,
      weight: "bold"
    }) : i))), i < steps && /*#__PURE__*/_react["default"].createElement("div", {
      className: "connector ".concat(isCompleted ? "completed" : "")
    })));
  };
  for (var i = 1; i <= steps; i++) {
    _loop(i);
  }
  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: function ref(node) {
      stepperRef.current = node;
      if (_ref2) {
        if (typeof _ref2 === "function") {
          _ref2(node);
        } else {
          _ref2.current = node;
        }
      }
    },
    className: "stepper ".concat(orientation),
    tabIndex: 0
  }, stepElements);
});
Stepper.propTypes = {
  steps: _propTypes["default"].number.isRequired,
  currentStep: _propTypes["default"].number.isRequired,
  orientation: _propTypes["default"].oneOf(["horizontal", "vertical"]),
  icons: _propTypes["default"].arrayOf(_propTypes["default"].elementType),
  dynamic: _propTypes["default"].bool,
  onStepClick: _propTypes["default"].func
};
var _default = exports["default"] = Stepper;