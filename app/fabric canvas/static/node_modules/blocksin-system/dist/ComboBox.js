"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactSelect = _interopRequireWildcard(require("react-select"));
var _sebikostudioIcons = require("sebikostudio-icons");
require("./radix-styles/ComboBox.scss");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var ComboBox = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var options = _ref.options,
    value = _ref.value,
    onChange = _ref.onChange,
    placeholder = _ref.placeholder,
    isMulti = _ref.isMulti,
    fluid = _ref.fluid,
    onInputChange = _ref.onInputChange,
    isClearable = _ref.isClearable,
    menuPlacement = _ref.menuPlacement;
  var CustomDropdownIndicator = function CustomDropdownIndicator(props) {
    return /*#__PURE__*/_react["default"].createElement(_reactSelect.components.DropdownIndicator, props, props.selectProps.menuIsOpen ? /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.ChevronUpIcon, null) : /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.ChevronDownIcon, null));
  };
  var CustomMultiValueRemove = function CustomMultiValueRemove(props) {
    return /*#__PURE__*/_react["default"].createElement(_reactSelect.components.MultiValueRemove, props, /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.Cross2Icon, null));
  };
  var CustomClearIndicator = function CustomClearIndicator(props) {
    return /*#__PURE__*/_react["default"].createElement(_reactSelect.components.ClearIndicator, props, /*#__PURE__*/_react["default"].createElement(_sebikostudioIcons.Cross2Icon, null));
  };
  var CustomOption = function CustomOption(props) {
    return /*#__PURE__*/_react["default"].createElement(_reactSelect.components.Option, props, props.data.avatar && /*#__PURE__*/_react["default"].createElement("div", {
      className: "SelectAvatar"
    }, /*#__PURE__*/_react["default"].createElement("img", {
      src: props.data.avatar,
      alt: ""
    })), props.children);
  };
  var CustomMultiValueLabel = function CustomMultiValueLabel(props) {
    return /*#__PURE__*/_react["default"].createElement(_reactSelect.components.MultiValueLabel, props, props.data.avatar && /*#__PURE__*/_react["default"].createElement("div", {
      className: "SelectAvatar"
    }, /*#__PURE__*/_react["default"].createElement("img", {
      src: props.data.avatar,
      alt: ""
    })), props.children);
  };
  return /*#__PURE__*/_react["default"].createElement(_reactSelect["default"], {
    isMulti: isMulti,
    fluid: fluid,
    options: options,
    value: value,
    onInputChange: onInputChange,
    isClearable: isClearable,
    onChange: onChange,
    menuPlacement: menuPlacement,
    placeholder: placeholder,
    classNamePrefix: "ComboBoxTrigger",
    className: "ComboBox ".concat(fluid ? "fluid" : ""),
    components: {
      DropdownIndicator: CustomDropdownIndicator,
      MultiValueRemove: CustomMultiValueRemove,
      Option: CustomOption,
      MultiValueLabel: CustomMultiValueLabel,
      ClearIndicator: CustomClearIndicator
    },
    ref: ref
  });
});
var _default = exports["default"] = ComboBox;