function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import React, { forwardRef } from 'react';
export const RetentionIcon = /*#__PURE__*/forwardRef(({
  className,
  style,
  ariaLabel,
  ...props
}, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  ref: ref,
  className: className,
  "aria-label": ariaLabel || "retention, user retention, user, user circle arrow, arrow",
  style: style,
  width: "20",
  height: "20",
  viewBox: "0 0 20 20",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/React.createElement("path", {
  d: "M2 2.5H6.25C6.38807 2.5 6.5 2.61193 6.5 2.75V6.5M6.5 2.65C3.58702 3.67959 1.5 6.73445 1.5 10C1.5 13.6284 4.07664 16.6551 7.5 17.35",
  stroke: "currentColor",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), /*#__PURE__*/React.createElement("circle", {
  cx: "13",
  cy: "6",
  r: "3",
  stroke: "currentColor",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), /*#__PURE__*/React.createElement("path", {
  d: "M7.5 14.5C7.5 13 9 11.5 11 11.5H15C17 11.5 18.5 13 18.5 14.5V17.5",
  stroke: "currentColor",
  strokeLinecap: "round",
  strokeLinejoin: "round"
})));
export default RetentionIcon;